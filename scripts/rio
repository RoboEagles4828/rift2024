#!/usr/bin/bash

IP_ADDRESS="10.48.28.2"

check-directory() {
    if [ ! -f "$1/robot.py" ]; then
        echo "ERROR: $1/robot.py does not exist!"
        exit
    fi
}

sshCommand() {
    ssh -t lvuser@$IP_ADDRESS "$@"
}

restart-code() {
    sshCommand "/usr/local/frc/bin/frcKillRobot.sh"
}

sync() {
    check-directory $1
    # Instead of copying all files, it should read the .riosyncmetadata file instead to determine what files changed 
    RSYNC_RESULT=$(rsync -azPi \
        --out-format="Updated File: %i %n%L" \
        --exclude __pycache__ \
        --exclude .pathplanner \
        --exclude simgui*.json \
        $1 lvuser@$IP_ADDRESS:/home/lvuser/py/)
    
    if [[ $RSYNC_RESULT == *"Updated File"* ]]; then
        sshCommand find /home/lvuser/py/ -type f -exec touch {} + # Untested change to update ALL files on modify
        # It would be much more efficient / effective to only touch the rsynced files, but idk how to do that...
        echo $RSYNC_RESULT
        # restart-code
    else
        echo "No changes made to files"
        echo "Not restarting robot!"
    fi

}

install-fastdeploy() { # UNTESTED!!!
    # Download opkg packages from NI
    mkdir .rio-packages && cd .rio-packages
    curl "http://download.ni.com/ni-linux-rt/feeds/academic/2023/arm/main/cortexa9-vfpv3/libacl1_2.2.52-r0.310_cortexa9-vfpv3.ipk" -o libacl--downloaded.ipk
    curl "http://download.ni.com/ni-linux-rt/feeds/academic/2023/arm/extra/cortexa9-vfpv3/rsync-lic_3.1.3-r0.23_cortexa9-vfpv3.ipk" -o rsync-lic--downloaded.ipk
    curl "http://download.ni.com/ni-linux-rt/feeds/academic/2023/arm/extra/cortexa9-vfpv3/rsync_3.1.3-r0.23_cortexa9-vfpv3.ipk" -o rsync--downloaded.ipk
    scp *.ipk admin@$IP_ADDRESS:/

    # Install packages onto RIO as admin
    ssh -t admin@$IP_ADDRESS "cd / && opkg install ./libacl--downloaded.ipk && opkg install rsync-lic--downloaded.ipk && opkg install rsync--downloaded.ipk"

    # Delete packages from local computer
    cd .. && rm -r .rio-packages
}

install-jurigged() { # UNTESTED !!!
    # Install modified jurigged & watchdog pip packages


}

help() {
    echo "In active development!"
    echo "Here be dragons!"
}

case $1 in 
    "check")
        check-directory "${2-.}"
    ;;

    "restart")
        restart-code
    ;;

    "deploy")
        echo "Would deploy here..."
    ;;

    "sync")
        sync "${2-.}"
    ;;

    "ssh")
        sshCommand
    ;;

    "install")
        install-fastdeploy
        install-jurigged
    ;;

    "help")
        help
    ;;
    
    *)
        echo "Unknown option: \"$1\""
        help
    ;;
esac