#!/usr/bin/bash

IP_ADDRESS="10.48.28.2"

check-directory() {
    if [ ! -f "$1/robot.py" ]; then
        echo "ERROR: $1/robot.py does not exist!"
        exit
    fi
}

sshCommand() {
    ssh -t lvuser@$IP_ADDRESS "$@"
}

restart-code() {
    sshCommand "/usr/local/frc/bin/frcKillRobot.sh"
}

sync() {
    check-directory $1
    # Instead of copying all files, it should read the .riosyncmetadata file instead to determine what files changed 
    RSYNC_RESULT=$(rsync -azPi \
        --out-format="Updated File: %i %n%L" \
        --exclude __pycache__ \
        --exclude .pathplanner \
        --exclude simgui*.json \
        $1 lvuser@$IP_ADDRESS:/home/lvuser/py/)
    
    if [[ $RSYNC_RESULT == *"Updated File"* ]]; then
        sshCommand find /home/lvuser/py/ -type f -exec touch {} + # Untested change to update ALL files on modify
        # It would be much more efficient / effective to only touch the rsynced files, but idk how to do that...
        echo $RSYNC_RESULT
        # restart-code
    else
        echo "No changes made to files"
        echo "Not restarting robot!"
    fi

}

install-fastdeploy() { # UNTESTED!!!
    # Download opkg packages from NI
    mkdir .rio-packages && cd .rio-packages
    curl "http://download.ni.com/ni-linux-rt/feeds/academic/2023/arm/main/cortexa9-vfpv3/libacl1_2.2.52-r0.310_cortexa9-vfpv3.ipk" -o libacl1_2.2.52-r0.310_cortexa9-vfpv3.ipk
    curl "http://download.ni.com/ni-linux-rt/feeds/academic/2023/arm/extra/cortexa9-vfpv3/rsync-lic_3.1.3-r0.23_cortexa9-vfpv3.ipk" -o rsync-lic_3.1.3-r0.23_cortexa9-vfpv3.ipk
    curl "http://download.ni.com/ni-linux-rt/feeds/academic/2023/arm/extra/cortexa9-vfpv3/rsync_3.1.3-r0.23_cortexa9-vfpv3.ipk" -o rsync_3.1.3-r0.23_cortexa9-vfpv3.ipk
    scp *.ipk admin@$IP_ADDRESS:/

    # Install packages onto RIO as admin
    ssh -t admin@$IP_ADDRESS "cd / && opkg install ./libacl1_*.ipk && opkg install rsync-lic_*.ipk && opkg install rsync_*.ipk && rm -rf *.ipk"

    # Delete packages from local computer
    cd .. && rm -r .rio-packages
}

install-jurigged() { # UNTESTED !!!
    # Install modified jurigged & watchdog pip packages
    mkdir .pip-packages && cd .pip-packages
    
    # Download all dependencies & patchable packages
    pip download --platform manylinux2014_armv7l --only-binary=:all: "watchdog==4.0.0" "jurigged==0.5.7"
    
    # Remove patched out blessed dependencies
    rm wcwidth-*.whl six-*.whl blessed-*.whl

    # Patch watchdog
    unzip watchdog-4.0.0-py3-none-manylinux2014_armv7l.whl -d watchdog && cd watchdog
    sed -i "s/manylinux2014_armv7l/any/" watchdog-4.0.0.dist-info/WHEEL
    zip -r ../watchdog-4.0.0-py3-none-any.whl *
    cd .. && rm -r watchdog && rm watchdog-4.0.0-py3-none-manylinux2014_armv7l.whl

    # Patch jurigged
    unzip jurigged-0.5.7-py3-none-any.whl -d jurigged && cd jurigged
    sed -i "/Requires-Dist: blessed/d" jurigged-0.5.7.dist-info/METADATA
    sed -i "/blessed/d" jurigged/live.py
    sed -i -r "s/print\(T\.\w+\((.*)\)/print\(\1/" jurigged/live.py
    rm ../jurigged-0.5.7-py3-none-any.whl && zip -r ../jurigged-0.5.7-py3-none-any.whl * && cd .. && rm -r jurigged

    # Install packages onto RIO as admin
    scp *.whl admin@$IP_ADDRESS:/
    ssh -t admin@$IP_ADDRESS "cd / && /usr/local/bin/pip3 install ovld-*.whl codefind-*.whl watchdog-*.whl jurigged-*.whl && rm -rf *.whl"

    # Delete packages from local computer
    cd .. && rm -r .pip-packages
}

help() {
    echo "In active development!"
    echo "Here be dragons!"
}

case $1 in 
    "check")
        check-directory "${2-.}"
    ;;

    "restart")
        restart-code
    ;;

    "deploy")
        echo "Would deploy here..."
    ;;

    "sync")
        sync "${2-.}"
    ;;

    "ssh")
        sshCommand
    ;;

    "install")
        case $2 in
            "fastdeploy")
                install-fastdeploy
                ;;
            "jurigged")
                install-jurigged
                ;;
            "")
                install-fastdeploy
                install-jurigged
                ;;
            *)
                echo "Unknown option: \"$2\""
                ;;
        esac
    ;;

    "help")
        help
    ;;
    
    *)
        echo "Unknown option: \"$1\""
        help
    ;;
esac